{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"1. Introducci\u00f3n Durante nuestro d\u00eda a d\u00eda puede llegar el momento en el que necesitos buscar elementos sobre nuestro sistema de archivos en GNU/Linux. Si bien es cierto que existen diferentes comandos, como which , whereis o locate , en este documento repasaremos brevemente el comando find . 2. El comando find El comando find es muy importante ya que dispone de varias opciones para poder afinar la b\u00fasqueda de aquello que buscamos.A continuaci\u00f3n veremos varias de dichas opciones y ejemplos de uso junto a su explicaci\u00f3n. Lo primer que debemos recordar es que para acceder a la ayuda, usaremos el comando man . $ man find y obtendremos lo mostrado en la siguiente imagen. 2.1 Opciones del comando find La sintaxis del comando ser\u00e1 $ find ruta opciones [ok|exec {}] \\; Partiendo de la siguiente estructura de directorios realizaremos algunos ejemplos para explicar algunas de las opciones del comando. \\begin{center} \\includegraphics[width=200pt,height=200pt]{img/02.png} \\end{center} type La opci\u00f3n type nos sirve para indicar si queremos buscar ficheros, directorios, enlaces, bloques, etc. A continuaci\u00f3n algunos ejemplos. $ find . -type f # B\u00fasqueda de ficheros regulares. $ find . -type d # B\u00fasqueda de directorios. $ find . -type l # B\u00fasqueda de enlaces simb\u00f3licos o blandos. $ find . \\( -type f -o -type d \\) # B\u00fasqueda de ficheros regulares y directorios. name La opci\u00f3n name nos permite definir el nombre o un patr\u00f3n para el nombre de aquellos ficheros que estamos buscando en nuestro sistema de archivos. $ find . -name 'prueba.txt' # Busca fichero que tengan ese nombre. $ find . -name '*.txt' # Busca ficheros que tengan extensi\u00f3n txt. $ find . -name 'prueba.*' # Busca ficheros que se llamen prueba. $ find . \\( -name '*.txt' -o -name 'prueba.*' \\) # Busca fichero que tengan extensi\u00f3n txt o se llamen prueba con cualquier extensi\u00f3n. size La opci\u00f3n size nos permite definir la capacidad que ocupa el fichero que buscamos. A continuaci\u00f3n algunos ejemplos. perm La opci\u00f3n perm nos permite definir los permisos de aquel fichero que estamos buscando. A continuaci\u00f3n algunos ejemplos. mtime user La opci\u00f3n user nos permite definir el usuario propietario de aquellos ficheros que estamos buscando. A continuaci\u00f3n algunos ejemplos. maxdepth La opci\u00f3n maxdepth nos permite definir el nivel m\u00e1ximo de niveles a los que queremos que acceda la herramienta find a buscar. A continuaci\u00f3n algunos ejemplos. empty La opci\u00f3n empty nos permite definir que la busqueda se refiere a un elemento vac\u00edo. $ find . empty # Busca ficheros que est\u00e9n vac\u00edos. link mmin ok exec 2.2 Combinar varias opciones Para llevar a cabo la combinaci\u00f3n de varias opciones debemos hacer uso de -and (Y) y -or (OR). A continuaci\u00f3n se muestran algunos ejemplos de ejecuci\u00f3n. $ find . \\( -type f -o -type d \\) -and \\( -name 'prueba.txt' -or -name '*.jpg' \\) # Se buscar\u00e1 ficheros regulares y directorios que # tengan por nombre prueba.txt o cualquier nombre pero extensi\u00f3n jpg. $ find . -type f \\( -name '*.txt -or -name'*.pdf \\) -and \\( -size +2M -and -size -5M \\) # Se buscar\u00e1 ficheros regulares cuyo nombre tenga # extensi\u00f3n txt o pdf y el tama\u00f1o usado en disco est\u00e9 comprendido entre 2MB y 5MB. 3. Actividades A continuaci\u00f3n se debe crear un comando find que cumpla lo que se indica para cada caso: Muestra los ficheros regulares que hay en el directorio home de tu usuario. Muestra los directorios que hay en el directorio home de tu usuario. Muestra los ficheros y los directorios que hay en el directorio home de tu usuario. Muestra los ficheros regulares que tengan por nombre info.txt Muestra los ficheros regulares que tengan por nombre info con cualquier extensi\u00f3n. Muestra los ficheros regulares que est\u00e9n vac\u00edos. Muestra los directorios que est\u00e9n vac\u00edos. Muestra los directorios cuyo nombre sea pruebas . Muestra los ficheros cuyo nombre sea alberto.txt o claves.pdf. Muestra los ficheros cuyo nombre tenga extensi\u00f3n txt o pdf . Muestra los ficheros que ocupen m\u00e1s de 1MB. Muestra los ficheros que ocupen m\u00e1s de 1MB y menos de 4MB. Muestra los ficheros cuyo nombre tenga extensi\u00f3n txt o pdf y adem\u00e1s est\u00e9n entre el rango de 10MB y 50MB. Muestra los enlaces duros Muestra los ficheros que tengan permisos de ejecutar. Elimina los ficheros txt . Elimina los directorios vac\u00edos. Copia los ficheros jpg a un directorio llamado backup que debe screar antes. Haz una b\u00fasqueda de ficheros mp3 con un m\u00e1ximo de dos niveles de profundidad. Repite la anterior a\u00f1diendo un filtro de menores de 3MB. Muestra los ficheros que han sido modificados hace menos de cuatro d\u00edas.","title":"1. Introducci\u00f3n"},{"location":"#1-introduccion","text":"Durante nuestro d\u00eda a d\u00eda puede llegar el momento en el que necesitos buscar elementos sobre nuestro sistema de archivos en GNU/Linux. Si bien es cierto que existen diferentes comandos, como which , whereis o locate , en este documento repasaremos brevemente el comando find .","title":"1. Introducci\u00f3n"},{"location":"#2-el-comando-find","text":"El comando find es muy importante ya que dispone de varias opciones para poder afinar la b\u00fasqueda de aquello que buscamos.A continuaci\u00f3n veremos varias de dichas opciones y ejemplos de uso junto a su explicaci\u00f3n. Lo primer que debemos recordar es que para acceder a la ayuda, usaremos el comando man . $ man find y obtendremos lo mostrado en la siguiente imagen.","title":"2. El comando find"},{"location":"#21-opciones-del-comando-find","text":"La sintaxis del comando ser\u00e1 $ find ruta opciones [ok|exec {}] \\; Partiendo de la siguiente estructura de directorios realizaremos algunos ejemplos para explicar algunas de las opciones del comando. \\begin{center} \\includegraphics[width=200pt,height=200pt]{img/02.png} \\end{center} type La opci\u00f3n type nos sirve para indicar si queremos buscar ficheros, directorios, enlaces, bloques, etc. A continuaci\u00f3n algunos ejemplos. $ find . -type f # B\u00fasqueda de ficheros regulares. $ find . -type d # B\u00fasqueda de directorios. $ find . -type l # B\u00fasqueda de enlaces simb\u00f3licos o blandos. $ find . \\( -type f -o -type d \\) # B\u00fasqueda de ficheros regulares y directorios. name La opci\u00f3n name nos permite definir el nombre o un patr\u00f3n para el nombre de aquellos ficheros que estamos buscando en nuestro sistema de archivos. $ find . -name 'prueba.txt' # Busca fichero que tengan ese nombre. $ find . -name '*.txt' # Busca ficheros que tengan extensi\u00f3n txt. $ find . -name 'prueba.*' # Busca ficheros que se llamen prueba. $ find . \\( -name '*.txt' -o -name 'prueba.*' \\) # Busca fichero que tengan extensi\u00f3n txt o se llamen prueba con cualquier extensi\u00f3n. size La opci\u00f3n size nos permite definir la capacidad que ocupa el fichero que buscamos. A continuaci\u00f3n algunos ejemplos. perm La opci\u00f3n perm nos permite definir los permisos de aquel fichero que estamos buscando. A continuaci\u00f3n algunos ejemplos. mtime user La opci\u00f3n user nos permite definir el usuario propietario de aquellos ficheros que estamos buscando. A continuaci\u00f3n algunos ejemplos. maxdepth La opci\u00f3n maxdepth nos permite definir el nivel m\u00e1ximo de niveles a los que queremos que acceda la herramienta find a buscar. A continuaci\u00f3n algunos ejemplos. empty La opci\u00f3n empty nos permite definir que la busqueda se refiere a un elemento vac\u00edo. $ find . empty # Busca ficheros que est\u00e9n vac\u00edos. link mmin ok exec","title":"2.1 Opciones del comando find"},{"location":"#22-combinar-varias-opciones","text":"Para llevar a cabo la combinaci\u00f3n de varias opciones debemos hacer uso de -and (Y) y -or (OR). A continuaci\u00f3n se muestran algunos ejemplos de ejecuci\u00f3n. $ find . \\( -type f -o -type d \\) -and \\( -name 'prueba.txt' -or -name '*.jpg' \\) # Se buscar\u00e1 ficheros regulares y directorios que # tengan por nombre prueba.txt o cualquier nombre pero extensi\u00f3n jpg. $ find . -type f \\( -name '*.txt -or -name'*.pdf \\) -and \\( -size +2M -and -size -5M \\) # Se buscar\u00e1 ficheros regulares cuyo nombre tenga # extensi\u00f3n txt o pdf y el tama\u00f1o usado en disco est\u00e9 comprendido entre 2MB y 5MB.","title":"2.2 Combinar varias opciones"},{"location":"#3-actividades","text":"A continuaci\u00f3n se debe crear un comando find que cumpla lo que se indica para cada caso: Muestra los ficheros regulares que hay en el directorio home de tu usuario. Muestra los directorios que hay en el directorio home de tu usuario. Muestra los ficheros y los directorios que hay en el directorio home de tu usuario. Muestra los ficheros regulares que tengan por nombre info.txt Muestra los ficheros regulares que tengan por nombre info con cualquier extensi\u00f3n. Muestra los ficheros regulares que est\u00e9n vac\u00edos. Muestra los directorios que est\u00e9n vac\u00edos. Muestra los directorios cuyo nombre sea pruebas . Muestra los ficheros cuyo nombre sea alberto.txt o claves.pdf. Muestra los ficheros cuyo nombre tenga extensi\u00f3n txt o pdf . Muestra los ficheros que ocupen m\u00e1s de 1MB. Muestra los ficheros que ocupen m\u00e1s de 1MB y menos de 4MB. Muestra los ficheros cuyo nombre tenga extensi\u00f3n txt o pdf y adem\u00e1s est\u00e9n entre el rango de 10MB y 50MB. Muestra los enlaces duros Muestra los ficheros que tengan permisos de ejecutar. Elimina los ficheros txt . Elimina los directorios vac\u00edos. Copia los ficheros jpg a un directorio llamado backup que debe screar antes. Haz una b\u00fasqueda de ficheros mp3 con un m\u00e1ximo de dos niveles de profundidad. Repite la anterior a\u00f1diendo un filtro de menores de 3MB. Muestra los ficheros que han sido modificados hace menos de cuatro d\u00edas.","title":"3. Actividades"}]}